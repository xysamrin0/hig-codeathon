{"version":3,"sources":["Components/ContentCard.js","App.js","reportWebVitals.js","index.js"],"names":["ContentCard","text","useState","numReactions","setNumReactions","numReactionsHeart","setNumReactionsHeart","Card","style","height","position","bottom","right","Button","border","background","onClick","console","log","App","cardListPositive","setCardListPositive","positiveText","setPositiveText","cardListImprove","setCardListImprove","improveText","setImproveText","cardListAction","setCardListAction","actionText","setActionText","className","Container","Navbar","bg","variant","Brand","href","alt","src","width","Row","Body","Title","Text","Col","value","onChange","event","target","class","concat","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9338511c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\n\r\nfunction ContentCard({text}){\r\n    function addReaction(){\r\n        console.log(\"adding reaction\");\r\n        setNumReactions(numReactions+1);\r\n    }\r\n    function addReactionHeart(){\r\n        setNumReactionsHeart(numReactionsHeart+1);\r\n    }\r\n    const [numReactions, setNumReactions] = useState(0);\r\n    const [numReactionsHeart, setNumReactionsHeart] = useState(0);\r\n    return(\r\n        <Card style={{ height: '100px'}}>{text}\r\n\r\n        <div style={{\r\n                    position: 'absolute',\r\n                    bottom:34,\r\n                    right:5,\r\n                }}>{numReactionsHeart}</div>\r\n        <Button style={{\r\n                    position: 'absolute',\r\n                    bottom:30,\r\n                    right:7,\r\n                    border: \"none\",\r\n                    background: \"none\"\r\n                }}\r\n                onClick={addReactionHeart}\r\n        >‚ù§Ô∏è</Button>\r\n\r\n        <div style={{\r\n                    position: 'absolute',\r\n                    bottom:4,\r\n                    right:5,\r\n                }}>{numReactions}</div>\r\n        <Button style={{\r\n                    position: 'absolute',\r\n                    bottom:0,\r\n                    right:7,\r\n                    border: \"none\",\r\n                    background: \"none\"\r\n                }}\r\n                onClick={addReaction}\r\n        >üëç</Button></Card>\r\n    )\r\n}\r\n\r\nexport default ContentCard;","import './App.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport ContentCard from './Components/ContentCard';\r\nimport { Container, Row, Col, Card, Button, Navbar} from 'react-bootstrap';\r\n\r\n\r\nfunction App() {\r\n\r\n  function addWentWell() {\r\n    setCardListPositive(cardListPositive.concat(<ContentCard text={positiveText}></ContentCard>));\r\n    setPositiveText(\"\");\r\n    console.log(cardListPositive);\r\n  }\r\n\r\n  function addImprove(){\r\n    setCardListImprove(cardListImprove.concat(<ContentCard text={improveText}></ContentCard>));\r\n    setImproveText(\"\");\r\n    console.log(cardListImprove);\r\n  }\r\n\r\n\r\n  function addActionItem(){\r\n    setCardListAction(cardListAction.concat(<ContentCard text={actionText}></ContentCard>));\r\n    setActionText(\"\");\r\n    console.log(cardListAction);\r\n  }\r\n\r\n  function handleWentWellText(event){\r\n    setPositiveText(event.target.value);\r\n  }\r\n\r\n  function handleImproveText(event){\r\n    setImproveText(event.target.value);\r\n  }\r\n\r\n  function handleActionText(event){\r\n    setActionText(event.target.value);\r\n  }\r\n\r\n  const [cardListPositive, setCardListPositive] = useState([]);\r\n  const [positiveText, setPositiveText] = useState(\"\");\r\n\r\n  const [cardListImprove, setCardListImprove] = useState([]);\r\n  const [improveText, setImproveText] = useState(\"\");\r\n\r\n  const [cardListAction, setCardListAction] = useState([]);\r\n  const [actionText, setActionText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">\r\n        <img\r\n            alt=\"\"\r\n            src=\"images/logo.svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n        />{' '}\r\n        HIG Retro Board\r\n        </Navbar.Brand>\r\n\r\n        </Navbar>\r\n          <Row>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>HIG Retro Board</Card.Title>\r\n                <Card.Text>\r\n                  <Col>\r\n                  Team Apex Legends\r\n                  </Col>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Row>\r\n          <Row>\r\n          <Col>\r\n            <Card style={{ height: '800px' }}>\r\n              <Card.Body>\r\n\r\n                <Card.Title>Positive Outcomes</Card.Title>\r\n                <Card.Text>\r\n                <Col>\r\n                  <textarea value={positiveText} onChange={handleWentWellText} />\r\n                </Col>\r\n                <button class=\"btn btn-secondary btn-lg btn-block\" onClick={addWentWell} style={{ marginBottom: '5px' }}>Add Item</button>\r\n\r\n                {cardListPositive}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n          <Card style={{ height: '800px' }}>\r\n              <Card.Body>\r\n                <Card.Title>Needs Improvement</Card.Title>\r\n                <Card.Text>\r\n                <Col>\r\n                  <textarea value={improveText} onChange={handleImproveText} />\r\n                </Col>\r\n                <button class=\"btn btn-secondary btn-lg btn-block\" onClick={addImprove} style={{ marginBottom: '5px' }}>Add Item</button>\r\n\r\n                {cardListImprove}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n          <Card style={{ height: '800px' }}>\r\n              <Card.Body>\r\n                <Card.Title>Actionable Items</Card.Title>\r\n                <Card.Text>\r\n                <Col>\r\n                  <textarea value={actionText} onChange={handleActionText} />\r\n                </Col>\r\n                <button class=\"btn btn-secondary btn-lg btn-block\" onClick={addActionItem} style={{ marginBottom: '5px' }}>Add Item</button>\r\n\r\n                {cardListAction}\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}