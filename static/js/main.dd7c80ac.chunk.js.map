{"version":3,"sources":["Components/ContentCard.js","App.js","reportWebVitals.js","index.js"],"names":["ContentCard","text","useState","numReactions","setNumReactions","numReactionsHeart","setNumReactionsHeart","Card","style","height","position","bottom","right","Button","border","background","onClick","console","log","App","cardListPositive","setCardListPositive","positiveText","setPositiveText","cardListImprove","setCardListImprove","improveText","setImproveText","cardListAction","setCardListAction","actionText","setActionText","className","Container","Row","Body","Title","Text","Col","value","onChange","event","target","concat","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd7c80ac.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\n\r\nfunction ContentCard({text}){\r\n    function addReaction(){\r\n        console.log(\"adding reaction\");\r\n        setNumReactions(numReactions+1);\r\n    }\r\n    function addReactionHeart(){\r\n        setNumReactionsHeart(numReactionsHeart+1);\r\n    }\r\n    const [numReactions, setNumReactions] = useState(0);\r\n    const [numReactionsHeart, setNumReactionsHeart] = useState(0);\r\n    return(\r\n        <Card style={{ height: '100px'}}>{text}\r\n\r\n        <div style={{\r\n                    position: 'absolute',\r\n                    bottom:24,\r\n                    right:5,\r\n                }}>{numReactionsHeart}</div>\r\n        <Button style={{\r\n                    position: 'absolute',\r\n                    bottom:20,\r\n                    right:7,\r\n                    border: \"none\",\r\n                    background: \"none\"\r\n                }}\r\n                onClick={addReactionHeart}\r\n        >‚ù§Ô∏è</Button>\r\n\r\n        <div style={{\r\n                    position: 'absolute',\r\n                    bottom:4,\r\n                    right:5,\r\n                }}>{numReactions}</div>\r\n        <Button style={{\r\n                    position: 'absolute',\r\n                    bottom:0,\r\n                    right:7,\r\n                    border: \"none\",\r\n                    background: \"none\"\r\n                }}\r\n                onClick={addReaction}\r\n        >üëç</Button></Card>\r\n    )\r\n}\r\n\r\nexport default ContentCard;","import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport ContentCard from './Components/ContentCard';\nimport { Container, Row, Col, Card, Button} from 'react-bootstrap';\n\n\nfunction App() {\n\n  function addWentWell() {\n    setCardListPositive(cardListPositive.concat(<ContentCard text={positiveText}></ContentCard>));\n    setPositiveText(\"\");\n    console.log(cardListPositive);\n  }\n\n  function addImprove(){\n    setCardListImprove(cardListImprove.concat(<ContentCard text={improveText}></ContentCard>));\n    setImproveText(\"\");\n    console.log(cardListImprove);\n  }\n\n\n  function addActionItem(){\n    setCardListAction(cardListAction.concat(<ContentCard text={actionText}></ContentCard>));\n    setActionText(\"\");\n    console.log(cardListAction);\n  }\n\n  function handleWentWellText(event){\n    setPositiveText(event.target.value);\n  }\n\n  function handleImproveText(event){\n    setImproveText(event.target.value);\n  }\n\n  function handleActionText(event){\n    setActionText(event.target.value);\n  }\n\n  const [cardListPositive, setCardListPositive] = useState([]);\n  const [positiveText, setPositiveText] = useState(\"\");\n\n  const [cardListImprove, setCardListImprove] = useState([]);\n  const [improveText, setImproveText] = useState(\"\");\n\n  const [cardListAction, setCardListAction] = useState([]);\n  const [actionText, setActionText] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <Container>\n          <Row>\n            <Card>\n              <Card.Body>\n                <Card.Title>HIG Retro Board</Card.Title>\n                <Card.Text>\n                  <Col>\n                  Team Apex Legends\n                  </Col>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Row>\n          <Row>\n          <Col>\n            <Card style={{ height: '800px' }}>\n              <Card.Body>\n\n                <Card.Title>Positive Outcomes</Card.Title>\n                <Card.Text>\n                <Col>\n                  <textarea value={positiveText} onChange={handleWentWellText} />\n                </Col>\n                <Button onClick={addWentWell} style={{ marginBottom: '5px' }}>Add Item</Button>\n\n                {cardListPositive}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n          <Card style={{ height: '800px' }}>\n              <Card.Body>\n                <Card.Title>Needs Improvement</Card.Title>\n                <Card.Text>\n                <Col>\n                  <textarea value={improveText} onChange={handleImproveText} />\n                </Col>\n                <Button onClick={addImprove} style={{ marginBottom: '5px' }}>Add Item</Button>\n\n                {cardListImprove}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col>\n          <Card style={{ height: '800px' }}>\n              <Card.Body>\n                <Card.Title>Actionable Items</Card.Title>\n                <Card.Text>\n                <Col>\n                  <textarea value={actionText} onChange={handleActionText} />\n                </Col>\n                <Button onClick={addActionItem} style={{ marginBottom: '5px' }}>Add Item</Button>\n\n                {cardListAction}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          </Row>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}